// @ts-check
// An intrinsic object whose purpose is to collect "static" methods that work with a single character.
/** Collection of methods that operates on single characters. */

const numChars = {
    '-': 1,
    '.': 1,
    '0': 1,
    '1': 1,
    '2': 1,
    '3': 1,
    '4': 1,
    '5': 1,
    '6': 1,
    '7': 1,
    '8': 1,
    '9': 1,
};

const whitespaceChars = {
    ' ': 1,
    '\t': 1,
    '\r': 1,
    '\n': 1,
};

/**
 * Scans a single character to verify if it is part of a number.
 * @param {string} charValue - the character value to be verified
 * @returns {boolean} whether or not the char value is part of a number (0-9), a decimal point, or the negative sign.
 */
export const isNumber = function isNumber(charValue) {
    return !!numChars[charValue];
};

/**
 * Scans a single character to verify if it is whitespace.
 * @param {String} charValue - The character value to be verified.
 * @returns {boolean} whether or not the char value is whitespace.
 */
export const isWhiteSpace = function isWhiteSpace(charValue) {
    return !!whitespaceChars[charValue];
};

/**
 * Scans a single character to verify if it is numeric.
 * @param {String} charValue - The character value to be verified.
 * @returns {boolean} whether or not the char value is numeric (0-9).
 */
export const isNumeric = function isNumeric(charValue) {
    if (charValue == null || charValue.length !== 1) return false;

    const unicode = charValue.charCodeAt(0);

    return unicode > 47 && unicode < 58;
};

/**
 * Scans a single character to verify if it is alphabetic.
 * @param {String} charValue - The character value to be verified.
 * @returns {boolean} whether or not the char value is alphabetic (a-z,A-Z).
 */
export const isAlphabetic = function isAlphabetic(charValue) {
    if (charValue == null || charValue.length !== 1) return false;

    const unicode = charValue.charCodeAt(0);
    return (unicode > 64 && unicode < 91) || (unicode > 96 && unicode < 123);
};

/**
 * Scans a single character to verify if it is alphanumeric.
 * @param {String} charValue - The character value to be verified.
 * @returns {boolean} whether or not the char value is alphanumeric (numeric or alphabetic).
 */
export const isAlphaNumeric = function isAlphaNumeric(charValue) {
    return isNumeric(charValue) || isAlphabetic(charValue);
};

/**
 * @param {String} charValue - The character value to be verified.
 * @returns
 */
export const isNameStart = function isNameStart(charValue) {
    if (charValue == null || charValue.length !== 1) return false;
    return charValue === '_' || isAlphabetic(charValue);
};

// :NSFUNCTION boolean isName(String charValue)
/** @param {String} charValue - The character value to be verified. */
export const isName = function isName(charValue) {
    return charValue === ':' || charValue === '.' || isNumeric(charValue) || isNameStart(charValue);
};

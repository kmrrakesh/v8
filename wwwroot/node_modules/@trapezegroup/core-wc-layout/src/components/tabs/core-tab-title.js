/**  import litElement base class and html helper function */
import { LitElement, html, css } from 'lit-element';

/** See core-layout.js for examples. */
export class CoreTabTitle extends LitElement {
    /** @inheritdoc */
    static get styles() {
        return [
            css`
                :host {
                    display: inline-block;
                    cursor: pointer;
                    color: var(--tab-txt, var(--prim-txt));
                    border-top: 0.3rem solid transparent;
                    border-bottom: 0.3rem solid transparent;
                    padding: 0 2rem;
                    box-sizing: border-box;
                    height: 100%;
                }

                :host([active]) {
                    color: var(--tab-active-txt, var(--prim-button-bg));
                    border-top: 0.3rem solid transparent;
                    border-bottom: 0.3rem solid var(--tab-active-txt, var(--prim-button-bg));
                }
            `,
        ];
    }

    /** @inheritdoc initialize as title */
    connectedCallback() {
        super.connectedCallback();

        this.setAttribute('slot', 'title');
    }

    /** We can initialize the properties here in the constructor */
    constructor() {
        // Must call superconstructor first.
        super();
    }

    /** @inheritdoc */
    render() {
        return html`<slot></slot>`;
    }
}
customElements.define('core-tab-title', CoreTabTitle);

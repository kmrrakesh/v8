// @ts-check
/**
 * Returns a map of all the values in the array, and a count of their occurrence for each value.
 * @param {Array} arr - The Array whose entries will be grouped by value and the count of the groups calculated.
 * @param {string} [prop] - The property to count by when an array of objects is used, if not specified, the elements in the array are counted
 * @returns {Object} The object keys contain all the values in the array, and object values is a count of the number of times the value was found in the array.
 */
export function valueCount(arr, prop) {
    const map = {};
    for (let i = 0, iLen = arr.length; i < iLen; i++) {
        const value = prop ? arr[i][prop] : arr[i];
        map[value] = map[value] ? map[value] + 1 : 1;
    }
    return map;
}

/**
 * Returns a string with array elements in CSV format, with the ordered elements represented as a range.
 * @param {number[]} arr - The array of numbers to turn into a CSV.
 * @returns {string} CSV formatted string of array elements.
 */
export function toCsvWithRanges(arr) {
    if (arr.length === 0) return null;
    let mapStr = '';
    let firstAdded = false;
    for (let i = 0, len = arr.length; i < len; i++) {
        if (firstAdded) mapStr += ',';
        firstAdded = true;

        mapStr += arr[i];

        if (arr[i] === arr[i + 1] - 1) {
            mapStr += '-';
            for (; i < len; ++i) {
                if (arr[i] !== arr[i + 1] - 1 || i === len - 1) {
                    mapStr += arr[i];
                    break;
                }
            }
        }
    }
    return mapStr;
}

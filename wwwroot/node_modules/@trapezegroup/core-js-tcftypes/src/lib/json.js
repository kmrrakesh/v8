import { getDataType, AbstractType } from './types.js';
import { getHex } from './typeInfo.js';

// @ts-check

/** ???? */
const SPECIAL_TYPE_IDENTIFIER = '';

/**
 *
 * @param {*} key
 * @param {*} value
 */
export function reviver(key, value) {
    if (Array.isArray(value)) {
        const type = value[1];
        const id = SPECIAL_TYPE_IDENTIFIER;
        if (type.indexOf(id) === 0) {
            const typeInstance = new (getDataType(type.substr(id.length)))();
            typeInstance.setValue(value[0]);
            return typeInstance;
        }
    }
    return value;
}

/**
 *
 * @param {*} key
 * @param {*} value
 */
export function replacer(key, value) {
    return value instanceof AbstractType ? [value.getValue(), SPECIAL_TYPE_IDENTIFIER + getHex(value)] : value;
}

/* global describe, beforeAll, afterAll, it, expect */
/* Jasmine will be loaded by the test framework. No need to import it. */
import '/node_modules/jquery/dist/jquery.min.js';
import '../../../../src/components/modal/core-modal.js';
import '/node_modules/@trapezegroup/core-webui-styles/dist/theme-default/components/transition.js';
import '/node_modules/@trapezegroup/core-webui-styles/dist/theme-default/components/dimmer.js';

const container = document.createElement('div');
container.innerHTML = `
<core-modal>
    <div slot="header">Header</div>
    <div slot="content">Content</div>
    <div slot="positiveButton">
        <button id="ok-button">OK<button>
    </div>
<core-modal>`;

const coreModal = container.querySelector('core-modal');
describe('modal', () => {
    beforeAll(() => {
        document.body.appendChild(container);
    });

    afterAll(() => {
        document.body.removeChild(container);
    });

    it('should render header, footer and the contents', () => {
        expect(coreModal.innerHTML).toContain('Header');
        expect(coreModal.innerHTML).toContain('Content');
    });

    it('should render the button', () => {
        expect(coreModal.innerHTML).toContain('OK');
    });

    it('test whether the slots are available for the buttons and content', () => {
        expect(coreModal.shadowRoot.querySelector('[slot="content"]')).toBeTruthy();
        expect(coreModal.shadowRoot.querySelector('[slot="negativeButton"]')).toBeTruthy();
        expect(coreModal.shadowRoot.querySelector('[slot="positiveButton"]')).toBeTruthy();
        expect(coreModal.shadowRoot.querySelector('[slot="intermediateButton"]')).toBeTruthy();
    });
});

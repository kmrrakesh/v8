/**  import litElement base class and html helper function */
import { LitElement, html, css } from 'lit-element';

/** This is an example of a component which extends the litElement */
export class CoreWorkspaceHeader extends LitElement {
    /** @inheritdoc */
    static get styles() {
        return css`
            :host {
                display: block;
                background-color: var(--nav-bg);
                height: 5rem;
                position: absolute;
                top: 0;
                width: 100%;
            }
            .main-div {
                display: flex;
                color: var(--nav-bg);
                height: 5rem;
                line-height: 5rem;
                margin: 0 0 0 2.5rem;
            }
            .left-div {
                display: flex;
                justify-content: flex-start;
            }
            .logo-div {
                width: 2.6rem;
                height: 1.1rem;
                margin-right: 0.8rem;
                margin-top: 0.4rem;
            }
            .product-name ::slotted(*) {
                color: var(--nav-txt);
                font-size: 2rem;
                letter-spacing: 0;
                text-align: left;
                font-weight: 100;
            }
            .notifications ::slotted(*) {
                margin-top: 1.2rem;
                height: 1.3rem;
                width: 1.5rem;
                line-height: 1.6rem;
            }
            .user-profile {
                margin-top: 1.2rem;
            }
            .right-div {
                display: flex;
                justify-content: flex-end;
                flex: 2 0 0;
                line-height: 1.6rem;
            }
            .nav-list ::slotted(*) {
                display: flex;
                height: 100%;
            }
            @media screen and (max-width: 697px) {
                .product-name ::slotted(*) {
                    font: 1.5rem;
                    margin-top: 0.5rem;
                }
            }
        `;
    }

    /** We can initialize the properties here in the constructor */
    constructor() {
        // Must call superconstructor first.
        super();
    }

    /** @inheritdoc */
    render() {
        return html`
        <div class="main-div">
            ${this.leftTemplate}
            ${this.rightTemplate}
        </div>
    `;
    }

    /**
     * @returns {import('lit-element').TemplateResult}
     *  returns the header template for the workspace
     */
    get leftTemplate() {
        return html`
        <div class="left-div">
            <div class="logo-div">
                <slot name="logo"></slot>
            </div>
            <div class="product-name">
                <slot name="productName"></slot>
            </div>
        </div>
        `;
    }

    /**
     * @returns {import('lit-element').TemplateResult}
     *  returns the header template for the modal
     */
    get rightTemplate() {
        return html`
        <div class="right-div">
            <div class="notifications">
                <slot name="notifications"></slot>
            </div>
            <div class="nav-list">
                <slot name="navLinks"></slot>
            </div>
            <div class="nav-action">
                <slot name="navAction"></slot>
            </div>
            <div class="search">
                <slot name="searchBar"></slot>
            </div>
            <div class="user-profile">
                <slot name="userProfile"></slot>
            </div>
            
        </div>
        `;
    }
}
customElements.define('core-workspace-header', CoreWorkspaceHeader);

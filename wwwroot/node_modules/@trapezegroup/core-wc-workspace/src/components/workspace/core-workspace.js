/**  import litElement base class and html helper function */
import '@trapezegroup/core-wc-notification/src/components/notification/core-notification.js';
import { LitElement, html, css } from 'lit-element';
import { trapezeIcon } from '@trapezegroup/core-js-icons/src/lib/trapeze-icon.js';
import { unsafeHTML } from 'lit-html/directives/unsafe-html.js';
import './core-workspace-header.js';
import './core-workspace-content.js';
import './core-workspace-content-with-footer.js';
import './core-workspace-footer.js';
import './core-user-profile-menu.js';
import '../../lib/i18n.js';

/** This is an example of a component which extends the litElement */
export class CoreWorkspace extends LitElement {
    /** @inheritdoc */
    static get styles() {
        return css`
            :host {
                display: block;
                position: relative;
                overflow: hidden;
                width: 100%;
                height: 100%;
            }
            .workspace-div {
                height: 100%;
            }
            core-notification {
                height: 100%;
                width: 5rem;
            }
        `;
    }

    /** We can initialize the properties here in the constructor */
    constructor() {
        // Must call superconstructor first.
        super();
    }

    /** @inheritdoc */
    render() {
        return html`
        <div class="workspace-div">
            ${this.headerTemplate}
            ${this.contentTemplate}
            ${this.footerTemplate}
        </div>
    `;
    }

    /**
     * @returns {import('lit-element').TemplateResult}
     *  returns the header template for the workspace
     */
    get headerTemplate() {
        return html`
        <core-workspace-header>
            <slot name="logo" slot="logo">
                ${unsafeHTML(trapezeIcon)}
            </slot>
            <slot name="productName" slot="productName"></slot>
            <slot name="notifications" slot="notifications"><core-notification></core-notification></slot>
            <slot name="navLinks" slot="navLinks"></slot>
            <slot name="navAction" slot="navAction"></slot>
            <slot name="searchBar" slot="searchBar"></slot>
            <slot name="userProfile" slot="userProfile"><core-user-profile-menu></core-user-profile-menu>
            </slot>
        </core-workspace-header>
        `;
    }

    /**
     * @returns {import('lit-element').TemplateResult}
     *  returns the footer template for the workspace
     */
    get footerTemplate() {
        return this.isDefaultFooter()
            ? html`<core-workspace-footer>
            <slot name="footer" slot="footer"></slot>
            </core-workspace-footer>`
            : null;
    }

    /** checking whether default footer is required
     * @returns { boolean } check whether to show the default footer or not
     */
    isDefaultFooter() {
        if (!this.querySelector('core-workspace-content-with-footer') && this.querySelector('[slot="footer"]')) {
            return true;
        }
        return false;
    }

    /**
     * @returns {import('lit-element').TemplateResult}
     *  returns the content template for the workspace
     */
    get contentTemplate() {
        return html`<core-workspace-content>
        <slot name="content" slot="content">
        </slot>
        </core-workspace-content>
        `;
    }
}
customElements.define('core-workspace', CoreWorkspace);

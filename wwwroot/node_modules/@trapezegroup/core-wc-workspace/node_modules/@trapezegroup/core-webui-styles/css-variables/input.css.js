export const styles = `/*!
 * # Fomantic-UI - Input
 * http://github.com/fomantic/Fomantic-UI/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */


/*******************************
           Standard
*******************************/


/*--------------------
        Inputs
---------------------*/

.ui.input {
  position: relative;
  font-weight: normal;
  font-style: normal;
  display: inline-flex;
  color: var(--prim-txt);
}
.ui.input > input {
  margin: 0;
  max-width: 100%;
  flex: 1 0 auto;
  outline: none;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  text-align: left;
  line-height: 1.21428571em;
  font-family: 'Source Sans Pro', 'Segoe UI', 'Helvetica Neue', Arial, Helvetica, sans-serif;
  padding: 0.8rem;
  background: var(--prim-bg);
  border: 1px solid var(--prim-brd);
  color: var(--prim-txt);
  border-radius: 0.33333333rem;
  transition: border-color 0.1s ease, -webkit-box-shadow 0.1s ease;
  transition: box-shadow 0.1s ease, border-color 0.1s ease;
  transition: box-shadow 0.1s ease, border-color 0.1s ease, -webkit-box-shadow 0.1s ease;
  box-shadow: none;
}

/*--------------------
      Placeholder
---------------------*/


/* browsers require these rules separate */
.ui.input > input::-webkit-input-placeholder {
  color: var(--prim-bg);
}
.ui.input > input::-moz-placeholder {
  color: var(--prim-bg);
}
.ui.input > input:-ms-input-placeholder {
  color: var(--prim-bg);
}


/*******************************
            States
*******************************/


/*--------------------
        Disabled
---------------------*/

.ui.disabled.input,
.ui.input:not(.disabled) input[disabled] {
  opacity: 0.45;
}
.ui.disabled.input > input,
.ui.input:not(.disabled) input[disabled] {
  pointer-events: none;
}

/*--------------------
        Active
---------------------*/

.ui.input > input:active,
.ui.input.down input {
  border-color: var(--prim-sel-brd);
  background: var(--prim-bg);
  color: var(--prim-txt);
  box-shadow: none;
}

/*--------------------
       Loading
---------------------*/

.ui.loading.loading.input > i.icon:before {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;
  margin: -0.625em 0 0 -0.625em;
  width: 1.25em;
  height: 1.25em;
  border-radius: 500rem;
  border: 0.2em solid rgba(0, 0, 0, 0.1);
}
.ui.loading.loading.input > i.icon:after {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;
  margin: -0.625em 0 0 -0.625em;
  width: 1.25em;
  height: 1.25em;
  animation: loader 0.6s infinite linear;
  border: 0.2em solid var(--prim-brd);
  border-radius: 500rem;
  box-shadow: 0 0 0 1px transparent;
}

/*--------------------
        Focus
---------------------*/

.ui.input.focus > input,
.ui.input > input:focus {
  border-color: var(--prim-sel-brd);
  background: var(--prim-bg);
  color: var(--prim-txt);
  box-shadow: none;
}
.ui.input.focus > input::-webkit-input-placeholder,
.ui.input > input:focus::-webkit-input-placeholder {
  color: var(--prim-bg);
}
.ui.input.focus > input::-moz-placeholder,
.ui.input > input:focus::-moz-placeholder {
  color: var(--prim-bg);
}
.ui.input.focus > input:-ms-input-placeholder,
.ui.input > input:focus:-ms-input-placeholder {
  color: var(--prim-bg);
}

/*--------------------
        Error
---------------------*/

.ui.input.error > input {
  background-color: var(--prim-txt-error);
  border-color: var(--sec-border-status);
  color: var(--prim-bg);
  -webkit-box-shadow: none;
          box-shadow: none;
}

/* Error Placeholder */
.ui.input.error > input::-webkit-input-placeholder {
  color: var(--prim-bg);
}
.ui.input.error > input::-moz-placeholder {
  color: var(--prim-bg);
}
.ui.input.error > input:-ms-input-placeholder {
  color: var(--prim-bg) !important;
}

/* Focused Error Placeholder */
.ui.input.error > input:focus::-webkit-input-placeholder {
  color: var(--prim-bg);
}
.ui.input.error > input:focus::-moz-placeholder {
  color: var(--prim-bg);
}
.ui.input.error > input:focus:-ms-input-placeholder {
  color: var(--prim-bg) !important;
}


/*******************************
           Variations
*******************************/


/*--------------------
      Transparent
---------------------*/

.ui.transparent.input > textarea,
.ui.transparent.input > input {
  border-color: transparent !important;
  background-color: transparent !important;
  padding: 0 !important;
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
  border-radius: 0 !important;
}

/* Transparent Icon */
.ui.transparent.icon.input > i.icon {
  width: 1.1em;
}
.ui.transparent.icon.input > input {
  padding-left: 0 !important;
  padding-right: 2em !important;
}
.ui.transparent[class*="left icon"].input > input {
  padding-left: 2em !important;
  padding-right: 0 !important;
}

/* Transparent Inverted */
.ui.transparent.inverted.input {
  color: var(--prim-bg);
}
.ui.ui.transparent.inverted.input > textarea,
.ui.ui.transparent.inverted.input > input {
  color: inherit;
}
.ui.transparent.inverted.input > input::-webkit-input-placeholder {
  color: var(--sec-txt);
}
.ui.transparent.inverted.input > input::-moz-placeholder {
  color: var(--sec-txt);
}
.ui.transparent.inverted.input > input:-ms-input-placeholder {
  color: var(--sec-txt);
}

/*--------------------
         Icon
---------------------*/

.ui.icon.input > i.icon {
  cursor: default;
  position: absolute;
  line-height: 1;
  text-align: center;
  top: 0;
  right: 0;
  margin: 0;
  height: 100%;
  width: 2.93333333em;
  opacity: 0.5;
  border-radius: 0 0.33333333rem 0.33333333rem 0;
  -webkit-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}
.ui.icon.input > i.icon:not(.link) {
  pointer-events: none;
}
.ui.icon.input > textarea,
.ui.icon.input > input {
  padding-right: 2.93333333em !important;
}
.ui.icon.input > i.icon:before,
.ui.icon.input > i.icon:after {
  left: 0;
  position: absolute;
  text-align: center;
  top: 50%;
  width: 100%;
  margin-top: -0.5em;
}
.ui.icon.input > i.link.icon {
  cursor: pointer;
}
.ui.icon.input > i.circular.icon {
  top: 0.35em;
  right: 0.5em;
}

/* Left Icon Input */
.ui[class*="left icon"].input > i.icon {
  right: auto;
  left: 1px;
  border-radius: 0.33333333rem 0 0 0.33333333rem;
}
.ui[class*="left icon"].input > i.circular.icon {
  right: auto;
  left: 0.5em;
}
.ui[class*="left icon"].input > textarea,
.ui[class*="left icon"].input > input {
  padding-left: 2.93333333em !important;
  padding-right: 1.16666667em !important;
}

/* Focus */
.ui.icon.input > textarea:focus ~ i.icon,
.ui.icon.input > input:focus ~ i.icon {
  opacity: 1;
}

/*--------------------
        Labeled
---------------------*/


/* Adjacent Label */
.ui.labeled.input > .label {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  margin: 0;
  font-size: 1em;
}
.ui.labeled.input > .label:not(.corner) {
  padding-top: 0.91666667em;
  padding-bottom: 0.91666667em;
}

/* Regular Label on Left */
.ui.labeled.input:not([class*="corner labeled"]) .label:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.ui.labeled.input:not([class*="corner labeled"]) .label:first-child + input {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left-color: transparent;
}
.ui.labeled.input:not([class*="corner labeled"]) .label:first-child + input:focus {
  border-left-color: var(--prim-brd);
}

/* Regular Label on Right */
.ui[class*="right labeled"].input > input {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-right-color: transparent !important;
}
.ui[class*="right labeled"].input > input + .label {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.ui[class*="right labeled"].input > input:focus {
  border-right-color: var(--prim-brd) !important;
}

/* Corner Label */
.ui.labeled.input .corner.label {
  top: 1px;
  right: 1px;
  font-size: 0.75em;
  border-radius: 0 0.33333333rem 0 0;
}

/* Spacing with corner label */
.ui[class*="corner labeled"]:not([class*="left corner labeled"]).labeled.input > textarea,
.ui[class*="corner labeled"]:not([class*="left corner labeled"]).labeled.input > input {
  padding-right: 2.5em !important;
}
.ui[class*="corner labeled"].icon.input:not([class*="left corner labeled"]) > textarea,
.ui[class*="corner labeled"].icon.input:not([class*="left corner labeled"]) > input {
  padding-right: 3.25em !important;
}
.ui[class*="corner labeled"].icon.input:not([class*="left corner labeled"]) > .icon {
  margin-right: 1.25em;
}

/* Left Labeled */
.ui[class*="left corner labeled"].labeled.input > textarea,
.ui[class*="left corner labeled"].labeled.input > input {
  padding-left: 2.5em !important;
}
.ui[class*="left corner labeled"].icon.input > textarea,
.ui[class*="left corner labeled"].icon.input > input {
  padding-left: 3.25em !important;
}
.ui[class*="left corner labeled"].icon.input > .icon {
  margin-left: 1.25em;
}
.ui.icon.input > textarea ~ .icon {
  height: 3em;
}

/* Corner Label Position  */
.ui.input > .ui.corner.label {
  top: 1px;
  right: 1px;
}
.ui.input > .ui.left.corner.label {
  right: auto;
  left: 1px;
}

/* Labeled and action input error */
.ui.form > .field.error > .ui.action.input > .ui.button,
.ui.form > .field.error > .ui.labeled.input:not([class*="corner labeled"]) > .ui.label,
.ui.action.input.error > .ui.button,
.ui.labeled.input.error:not([class*="corner labeled"]) > .ui.label {
  border-top: 1px solid var(--sec-border-status);
  border-bottom: 1px solid var(--sec-border-status);
}
.ui.form > .field.error > .ui.left.action.input > .ui.button,
.ui.form > .field.error > .ui.labeled.input:not(.right):not([class*="corner labeled"]) > .ui.label,
.ui.left.action.input.error > .ui.button,
.ui.labeled.input.error:not(.right):not([class*="corner labeled"]) > .ui.label {
  border-left: 1px solid var(--sec-border-status);
}
.ui.form > .field.error > .ui.action.input:not(.left) > input + .ui.button,
.ui.form > .field.error > .ui.right.labeled.input:not([class*="corner labeled"]) > input + .ui.label,
.ui.action.input.error:not(.left) > input + .ui.button,
.ui.right.labeled.input.error:not([class*="corner labeled"]) > input + .ui.label {
  border-right: 1px solid var(--sec-border-status);
}
.ui.form > .field.error > .ui.right.labeled.input:not([class*="corner labeled"]) > .ui.label:first-child,
.ui.right.labeled.input.error:not([class*="corner labeled"]) > .ui.label:first-child {
  border-left: 1px solid var(--sec-border-status);
}

/*--------------------
        Action
---------------------*/

.ui.action.input > .button,
.ui.action.input > .buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
}
.ui.action.input > .button,
.ui.action.input > .buttons > .button {
  padding-top: 0.91666667em;
  padding-bottom: 0.91666667em;
  margin: 0;
}

/* Button on Right */
.ui.action.input:not([class*="left action"]) > input {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-right-color: transparent !important;
}
.ui.action.input:not([class*="left action"]) > .dropdown:not(:first-child),
.ui.action.input:not([class*="left action"]) > .button:not(:first-child),
.ui.action.input:not([class*="left action"]) > .buttons:not(:first-child) > .button {
  border-radius: 0;
}
.ui.action.input:not([class*="left action"]) > .dropdown:last-child,
.ui.action.input:not([class*="left action"]) > .button:last-child,
.ui.action.input:not([class*="left action"]) > .buttons:last-child > .button {
  border-radius: 0 0.33333333rem 0.33333333rem 0;
}

/* Input Focus */
.ui.action.input:not([class*="left action"]) > input:focus {
  border-right-color: var(--prim-brd) !important;
}

/* Button on Left */
.ui[class*="left action"].input > input {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left-color: transparent !important;
}
.ui[class*="left action"].input > .dropdown,
.ui[class*="left action"].input > .button,
.ui[class*="left action"].input > .buttons > .button {
  border-radius: 0;
}
.ui[class*="left action"].input > .dropdown:first-child,
.ui[class*="left action"].input > .button:first-child,
.ui[class*="left action"].input > .buttons:first-child > .button {
  border-radius: 0.33333333rem 0 0 0.33333333rem;
}

/* Input Focus */
.ui[class*="left action"].input > input:focus {
  border-left-color: var(--prim-brd) !important;
}

/*--------------------
       Inverted
---------------------*/


/* Standard */
.ui.inverted.input > input {
  border: none;
}

/*--------------------
        Fluid
---------------------*/

.ui.fluid.input {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.ui.fluid.input > input {
  width: 0 !important;
}

/*--------------------
        Size
---------------------*/

.ui.mini.input {
  font-size: 0.75em;
}
.ui.tiny.input {
  font-size: 0.83333333em;
}
.ui.small.input {
  font-size: 0.91666667em;
}
.ui.input {
  font-size: 1em;
}
.ui.large.input {
  font-size: 1.16666667em;
}
.ui.big.input {
  font-size: 1.25em;
}
.ui.huge.input {
  font-size: 1.41666667em;
}
.ui.massive.input {
  font-size: 1.75em;
}


/*******************************
         Theme Overrides
*******************************/



/*******************************
         Site Overrides
*******************************/

.ui.input {
  --icon-color: var(--prim-txt);
}
`;

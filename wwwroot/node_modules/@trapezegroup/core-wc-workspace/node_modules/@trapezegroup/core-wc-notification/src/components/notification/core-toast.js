// @ts-nocheck

/* global toastr */
/**  import litElement base class and html helper function */
import { LitElement, html, css } from 'lit-element';
import '/node_modules/toastr/toastr.js';

const link = document.createElement('link');
link.href = '/node_modules/toastr/build/toastr.min.css';
link.type = 'text/css';
link.rel = 'stylesheet';
document.getElementsByTagName('head')[0].appendChild(link);

/** This is an example of a component which extends the litElement */
export class CoreToast extends LitElement {
    /** @inheritdoc */
    static get styles() {
        return [
            css`
                :host {
                    display: block;
                    border-radius: 0.28rem;
                    color: var(--prim-txt);
                    height: 7.4rem;
                    width: 40rem;
                    background-color: var(--prim-bg);
                }
            `,
        ];
    }
    /** We can initialize the properties here in the constructor */
    constructor() {
        // Must call superconstructor first.
        super();
    }

    /** @inheritdoc */
    render() {
        return html`<slot></slot>`;
    }

    /** Initializes the UI */
    firstUpdated() {
        toastr.options = {
            closeButton: false,
            debug: false,
            onclick: null,
            showDuration: 1000,
            hideDuration: 1000,
            timeOut: 4000,
            extendedTimeOut: 0,
            showEasing: 'swing',
            hideEasing: 'linear',
            showMethod: 'fadeIn',
            hideMethod: 'fadeOut',
            progressBar: true,
            newestOnTop: false,
            positionClass: 'toast-bottom-right',
        };
        toastr.info(this);
        this.styleToast();
    }

    /** Overriding the styles from the toastr library */
    styleToast() {
        const styles = document.createElement('style');
        styles.innerHTML = `#toast-container > div {
            padding: 0px !important;
            width: 40rem;
            box-shadow: var(--prim-shdw);
        }
        .toast-progress {
            background-color: var(--prim-border-status);
        }`;
        document.getElementById('toast-container').appendChild(styles);
    }
}
customElements.define('core-toast', CoreToast);

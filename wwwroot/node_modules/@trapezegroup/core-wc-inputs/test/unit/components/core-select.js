/* global describe, beforeAll, afterAll, it, expect */
/* Jasmine will be loaded by the test framework. No need to import it. */
import '/node_modules/jquery/dist/jquery.min.js';
import '/node_modules/@trapezegroup/core-webui-styles/dist/theme-default/components/dropdown.js';
import { CoreSelect } from '../../../src/components/core-select.js';

const container = document.createElement('div');
container.innerHTML = '<core-select multi-select></core-select>';

const coreSelect = container.querySelector('core-select');
coreSelect.inputValues = ['P1234', 'F2345', 'T4567'];

let containerTwo = document.createElement('div');

describe('coreSelect', () => {
    beforeAll(() => {
        document.body.appendChild(container);
        document.body.appendChild(containerTwo);
    });

    afterAll(() => {
        document.body.removeChild(container);
        document.body.removeChild(containerTwo);
    });

    afterEach(() => {
        containerTwo.innerHTML = '';
    })

    it('should render the options list', () => {
        expect(coreSelect.shadowRoot.querySelector('.core-dropdown .menu').innerHTML).toContain('P1234');
        expect(coreSelect.shadowRoot.querySelector('.core-dropdown .menu').innerHTML).toContain('F2345');
        expect(coreSelect.shadowRoot.querySelector('.core-dropdown .menu').innerHTML).toContain('T4567');
    });
    it('should render the classes for the multiselect', () => {
        expect(coreSelect.shadowRoot.querySelector('.core-dropdown').classList).toContain('multiple');
        expect(coreSelect.shadowRoot.querySelector('.core-dropdown').classList).toContain('core-multi-select');
    });
    it('should be able to change options', done => {
        containerTwo.innerHTML = '<core-select multi-select value="12,13"></core-select>';
        /** @type {CoreSelect} */
        const coreSelect = containerTwo.querySelector('core-select');
        setTimeout(() => {
            coreSelect.inputValues = ['11', '12', '13'];
            setTimeout(() => {
                const labels = coreSelect.shadowRoot.querySelectorAll('.core-dropdown > .label');
                console.log(labels);
                expect(labels[0].innerHTML).toContain('12');
                expect(labels[1].innerHTML).toContain('13');
                done();
            }, 10);
        }, 10);
    });
    it('should be able to change value', done => {
        containerTwo.innerHTML = '<core-select multi-select value="12,13"></core-select>';
        /** @type {CoreSelect} */
        const coreSelect = containerTwo.querySelector('core-select');
        coreSelect.inputValues = ['11', '12', '13'];
        setTimeout(() => {
            coreSelect.value = '11';
            setTimeout(() => {
                const labels = coreSelect.shadowRoot.querySelectorAll('.core-dropdown > .label');
                console.log(labels);
                expect(labels[0].innerHTML).toContain('11');
                expect(labels.length).toEqual(1);
                done();
            }, 10);
        }, 10);
    });
});

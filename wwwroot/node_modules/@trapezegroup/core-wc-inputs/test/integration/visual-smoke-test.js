// eslint-disable-next-line import/no-unresolved
// @ts-ignore
const visualSmokeTest = require('@trapezegroup/core-dev-lib/src/lib/visual-smoke-test');

/** Generic test code to test popup
 * @param {{ evaluate: (arg0: (name: any) => void) => void; evaluateHandle: (arg0: string) => void; }} page Puppeteer reference
 * @param {string} name name attribute value
 */
const setupTest = async (page, name) => {
    // Open the popup
    const inputSelector = `document.querySelector('test-inputs').shadowRoot.querySelector("[name='${name}']").shadowRoot.querySelector('input')`;
    const inputHandle = await page.evaluateHandle(inputSelector);
    // @ts-ignore
    await inputHandle.click();

    // Blinking carrot causes the tests to fail
    await page.evaluate(name2 => {
        document
            .querySelector('test-inputs')
            .shadowRoot.querySelector(`[name='${name2}']`)
            .shadowRoot.querySelector('input').style.cssText =
            'caret-color: transparent !important';
        // @ts-ignore
    }, name);

    // Wait for animation
    await new Promise((resolve, reject) => setTimeout(resolve, 500));
};

visualSmokeTest({
    routes: [
        {
            route: 'demo/calendar/index.html#datetime',
            setup: async page => {
                await setupTest(page, 'DateTime2');
            },
        },
        {
            route: 'demo/calendar/index.html#date',
            setup: async page => {
                await setupTest(page, 'Date2');
            },
        },
        {
            route: 'demo/calendar/index.html#time',
            setup: async page => {
                await setupTest(page, 'Time2');
            },
        },
        {
            route: 'demo/select/index.html',
            setup: async page => {
                const selectInputs = await page.$$('core-select');
                await selectInputs[0].click();
                await selectInputs[1].click();
            },
        },
    ],
});
